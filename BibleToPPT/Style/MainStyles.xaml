<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="PrimaryBackColor" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="PrimaryTextColor" Color="#515151"/>

    <SolidColorBrush x:Key="ButtonMouseOverColor" Color="#FFE4E4E4"/>

    <SolidColorBrush x:Key="ButtonPressedColor" Color="#3A7DE1"/>
    <SolidColorBrush x:Key="ButtonPressedTextColor" Color="#FFFFFF"/>

    <Style x:Key="PrimaryButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Padding" Value="12 6 12 6"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="btnBorder" CornerRadius="10"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"
                                              />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="btnBorder" Value="{DynamicResource ButtonMouseOverColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="btnBorder" Value="{DynamicResource ButtonPressedColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonPressedTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PageButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource ButtonPressedColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonPressedTextColor}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="btnBorder" CornerRadius="10"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"
                                              />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="btnBorder" Value="#306AC1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="btnBorder" Value="{DynamicResource ButtonPressedTextColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonPressedColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="etcBtn" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource ButtonPressedColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonPressedTextColor}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" CornerRadius="10"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"
                                              />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="btnBorder" Value="#306AC1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="whitebtn" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource ButtonPressedTextColor}"/> 
        <Setter Property="Foreground" Value="{DynamicResource ButtonPressedColor}"/> 
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" CornerRadius="10"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource ButtonPressedColor}"
                                BorderThickness="2"
                                Width="{TemplateBinding Width}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"
                                              />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="btnBorder" Value="{DynamicResource ButtonPressedColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonPressedTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Start: Button Close | Restore | Minimize -->
    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Name="ico" Data="{TemplateBinding Content}" Fill="{DynamicResource {x:Static SystemColors.AppWorkspaceBrushKey}}" Height="10" Width="10" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Bisque"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag" Value="IsCloseButton"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#D66D6D"/>
                            <Setter TargetName="ico" Property="Fill" Value="#FFFFFF"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag" Value="IsRestoreButton"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#6DD684"/>
                            <Setter TargetName="ico" Property="Fill" Value="#FFFFFF"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag" Value="IsMinimizeButton"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#D6CB6D"/>
                            <Setter TargetName="ico" Property="Fill" Value="#FFFFFF"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="#992133"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Button Close | Restore | Minimize -->

</ResourceDictionary>